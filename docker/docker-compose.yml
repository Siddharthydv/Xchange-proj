version: '3.8'

services:
  timescaledb:
    image: timescale/timescaledb:latest-pg12
    container_name: timescaledb
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: my_database
      POSTGRES_USER: your_user
      POSTGRES_PASSWORD: your_password
    volumes:
      - timescale-data:/var/lib/postgresql/data
    networks:
      - default
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "your_user", "-d", "my_database"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 5s

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - default

  frontend:
    image: callahaan/docker_frontend:latest  # Use the Docker Hub image
    container_name: frontend
    environment:
      NEXT_PUBLIC_BASE_URL: 'https://xprojects.in/api/v1'  # Update to match your API's public URL or EC2 IP
      NEXT_PUBLIC_WS_BASE_URL: 'wss://xprojects.in:3001'   # Update as needed
    depends_on:
      - api
    networks:
      - default

  api:
    build:
      context: ../api
      dockerfile: DOCKERFILE
    container_name: api
    ports:
      - "3000:3000"
    environment:
      ALLOWED_BASE_URL: 'xprojects.in'                             #replace yourdomain with IP of yoru ec2
      PORT: 3000
      REDIS_DOMAIN: redis
      REDIS_PORT: 6379
      PG_USER: your_user
      HOST: timescaledb
      DATABASE: my_database
      PASSWORD: your_password
      PG_PORT: 5432
    depends_on:
      timescaledb:
        condition: service_healthy
      redis:
        condition: service_started
    networks:
      - default

  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx:/var/www/html
      - ./certs:/etc/letsencrypt:ro
    depends_on:
      - frontend
      - api
    networks:
      - default
 
  certbot:
    image: certbot/certbot:latest
    container_name: certbot
    volumes:
      - ./certs:/etc/letsencrypt  # SSL certificates
      - ./certbot-logs:/var/log/letsencrypt # Logs
      - ./nginx:/var/www/html  # For nginx webroot validation
    networks:
      - default
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do sleep 1; done'"


  engine:
    build:
      context: ../engine
      dockerfile: DOCKERFILE
    container_name: engine
    environment:
      REDIS_DOMAIN: redis
      REDIS_PORT: 6379
    depends_on:
      - api
    networks:
      - default

  ws:
    build:
      context: ../ws
      dockerfile: DOCKERFILE
    container_name: ws
    ports:
      - "3001:3001"
    environment:
      PORT: 3001
      REDIS_DOMAIN: redis
      REDIS_PORT: 6379
    depends_on:
      - api
    networks:
      - default

  db:
    build: 
      context: ../db
      dockerfile: DOCKERFILE
    container_name: db
    environment:
      PG_USER: your_user
      HOST: timescaledb
      DATABASE: my_database
      PASSWORD: your_password
      PORT: 5432
      REDIS_DOMAIN: 'redis'
      REDIS_PORT: 6379
    depends_on:
      - api
    networks:
      - default

networks:
  default:
    name: shared-network

volumes:
  timescale-data:
  certbot-logs:
  certs:
  nginx:
